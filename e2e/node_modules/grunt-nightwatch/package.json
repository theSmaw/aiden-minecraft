{
  "version": "0.3.0",
  "name": "grunt-nightwatch",
  "description": "Run your Nightwatch.js tests with Grunt",
  "repository": {
    "type": "git",
    "url": "https://github.com/gextech/grunt-nightwatch.git"
  },
  "bugs": {
    "url": "https://github.com/gextech/grunt-nightwatch/issues"
  },
  "keywords": [
    "ci",
    "browser",
    "testing",
    "selenium",
    "automated",
    "functional",
    "nightwatch"
  ],
  "author": {
    "name": "Alvaro Cabrera",
    "email": "pateketrueke@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "nightwatch": "^0.5.22"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-watch": "~0.6.1"
  },
  "readme": "# Grunt meets Nightwatch.js\n\nAutomatize your tests:\n\n```javascript\nmodule.exports = function(grunt) {\n  grunt.initConfig({\n    nightwatch: {\n      options: { /* see below */ }\n    }\n  });\n\n  grunt.loadNpmTasks('grunt-nightwatch');\n};\n```\n\nWrite some tests:\n\n**tests/default/google-test.js**\n\n```javascript\nmodule.exports = {\n  'Demo test Google': function(browser) {\n    browser\n      .url('http://www.google.com')\n      .waitForElementVisible('body', 1000)\n      .setValue('input[type=text]', 'nodejs')\n      .waitForElementVisible('button[name=btnG]', 1000)\n      .click('button[name=btnG]').pause(1000)\n      .assert.containsText('#ires', 'joyent/node')\n      .end();\n  }\n};\n```\n\nExecute:\n\n```bash\n$ grunt nightwatch      # target: default\n$ grunt nightwatch:A    # target: A\n$ grunt nightwatch:A:B  # targets: A, B\n```\n\n## Options\n\nCurrently, `grunt-nightwatch` supports:\n\n- **globals**, **selenium**, **src_folders**, **output_folder**, **globals_path**, **custom_commands_path**, **custom_assertions_path**, **test_settings**, **launch_url**, **selenium_host**, **selenium_port**, **silent**, **output**, **disable_colors**, **screenshots**, **username**, **access_key**, **desiredCapabilities**, **exclude**, **filter**, **use_xpath**\n\n  All of these options are fully supported and will be merged from **task** to **target** settings (including the **default** target).\n\n- **standalone** (boolean)\n\n  If enabled, there are two scenarios:\n\n  - If **jar_path** option exists then use it\n  - If not, it will download from **jar_url** option\n\n- **jar_path** (string) - see above\n\n- **jar_url** (string)  - see above\n\nNote that the **nighwatch.json** file settings is fully supported, but your task options will override them if needed.\n\nSince `0.2.3` the  **settings.json** file was deprecated.\n\nSince `0.3.0` the **settings** property was deprecated.\n\n### Example options\n\n```javascript\n{\n  standalone: true,\n  jar_path: '/opt/selenium/server.jar',\n  jar_url: 'http://domain.com/files/selenium-server-standalone-2.40.0.jar',\n  globals: { foo: 'bar' },\n  globals_path: 'custom_tests/globals',\n  custom_commands_path: 'custom_tests/helpers',\n  custom_assertions_path: 'custom_tests/asserts',\n  src_folders: ['custom_tests/nightwatch'],\n  output_folder: 'report',\n  test_settings: {},\n  selenium: {}\n}\n```\n\n## Targets\n\nAll options are the same as the main settings.\n\n```javascript\nnightwatch: {\n  demo: { /* see above */ }\n}\n```\n\nNow you can execute `grunt nightwatch:demo` to run your tests.\n\nNote that your tests must be grouped together as follows: `tests/<group>/test.js`\n\nSince `0.3.0` you can run multiple targets at once but not in the same flavor as  [Nightwatch does](https://github.com/beatfactor/nightwatch/blob/master/bin/_clirunner.js).\n\n## Build status\n\n[![Build Status](https://travis-ci.org/gextech/grunt-nightwatch.png?branch=master)](https://travis-ci.org/gextech/grunt-nightwatch)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/gextech/grunt-nightwatch",
  "_id": "grunt-nightwatch@0.3.0",
  "_from": "grunt-nightwatch@"
}
